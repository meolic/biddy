#!/bin/bash

#  Authors     [Robert Meolic (robert@meolic.com)]
#  Revision    [$Revision: 656 $]
#  Date        [$Date: 2021-08-29 22:44:21 +0200 (ned, 29 avg 2021) $]
#
#  Copyright   [
#    This file is part of Biddy.
#    Copyright (C) 2006, 2019 UM FERI, Koroska cesta 46, SI-2000 Maribor, Slovenia
#    Copyright (C) 2019, 2021 Robert Meolic, SI-2000 Maribor, Slovenia
#
#    Biddy is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as
#    published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    Biddy is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public
#    License along with this program; if not, write to the Free
#    Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
#    Boston, MA 02110-1301 USA.
#  ]

# We are using dch -M
# remove -M if you are not the author of the last changelog entry

# Some help on building deb packages:
# http://wiki.debian.org/Packaging
# http://wiki.debian.org/IntroDebianPackaging
# http://packaging.ubuntu.com/html/

# Some help on using pbuilder
# https://wiki.ubuntu.com/PbuilderHowto
# http://wiki.debian.org/PbuilderTricks

# Ubuntu: List of releases
# https://wiki.ubuntu.com/Releases

# 1. To use pbuilder-dist you have to initialize/update pbuilder as follows:
# pbuilder-dist focal create
# pbuilder-dist focal update

# 2. Upload the resulting deb files to ppa repository
# cd ~/biddy/distribution/version-X/release-Y/distro/source
# dput ppa:meolic/biddy libbiddy*_source.changes

# Create binary release after creation of source release
# 0. You need dpkg-dev, fakeroot, debhelper, build-essential, pbuilder
# 1. You need source package, e.g.:
#      foo_*.debian.tar.gz
#      foo_*.dsc
#      foo_*_source.changes
#      foo_*.orig.tar.gz
# 2. Extract the package into a directory called foo_* and cd into it:
#      dpkg-source -x foo_*.dsc
#      cd foo_*
# 3. Use pbuilder (you need local repository for extra dependencies,
#    result will be in /var/cache/pbuilder/result/):
#      pdebuild
# 4. If you do not have pbuilder, install all dependencies and then
#    (result will be in ../):
#      dpkg-buildpackage -rfakeroot -b

LIBVERSION=1
VERSION=`sed "" VERSION`
MAJORVERSION=`cut -c1 VERSION`
NAME="libbiddy$LIBVERSION"
OS=`uname | sed "s/_.*//;s/[0-9]//g"`
DISTRO=$(lsb_release --short --codename)

if [ $# != 1 ]
then
  echo "Usage: ./package-deb RELEASE_NUMBER"
  exit 0
else
  RELEASE=$1
fi

if [ ! -d "distribution/version-$VERSION" ]
then
  echo "CREATE TGZ PACKAGE FIRST!"
  exit 0
fi

if [ -e "distribution/version-$VERSION/release-$RELEASE" ]
then
  echo "CANNOT CHANGE AN EXISTING RELEASE!"
  exit 0
fi

echo ""
echo "************************"
echo "CREATING NEW RELEASE ..."
echo "************************"
echo ""

mkdir "distribution/version-$VERSION/release-$RELEASE"
mkdir "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION"
mkdir "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION/debian"
mkdir "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION/debian/source"
#cp debian/compat "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION/debian"
cp debian/control "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION/debian"
cp debian/copyright "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION/debian"
cp debian/libbiddy1.dirs "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION/debian"
cp debian/libbiddy1-dev.dirs "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION/debian"
cp debian/rules "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION/debian"
cp debian/source/format "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION/debian/source"

cp VERSION README.md CHANGES "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION"
cp biddy.h biddyInt.h biddyMain.c biddyOp.c biddyStat.c biddyInOut.c "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION"
cp biddy-cudd.h biddy-cudd.c "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION"
cp Makefile Makefile.Linux "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION"

pushd "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION"
cp "../../changelog.deb" "debian/changelog"
cd ..
tar -czf "$NAME-$VERSION.tar.gz" "$NAME-$VERSION"
mv "$NAME-$VERSION.tar.gz" "$NAME"_"$VERSION.orig.tar.gz"
cd "$NAME-$VERSION"

echo ""
echo "**************************"
echo "GENERATING SOURCE PACKAGES"
echo "used to mantain Ubuntu PPA"
echo "**************************"
echo ""

# create a source distribution which match your system
# lsb_release --short --codename
# pbuilder-dist focal create
# pbuilder-dist focal update
# it will be builded in "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION"
# change key (debuild -k) if you are not Robert Meolic
echo "GENERATING SOURCE PACKAGE FOR $DISTRO"
dch -M -v "$VERSION-$RELEASE" -D $DISTRO
cp "debian/changelog" "../../changelog.deb"
debuild -S -sa -kF7FCCB3CD22F409B
mkdir `pwd`/../$DISTRO
mkdir `pwd`/../$DISTRO/source
mv `pwd`/../*.changes `pwd`/../*.dsc `pwd`/../$DISTRO/source
mv `pwd`/../*.debian.tar.xz `pwd`/../$DISTRO/source
mv `pwd`/../*.build `pwd`/../$DISTRO/source
mv `pwd`/../*.buildinfo `pwd`/../$DISTRO/source
cp `pwd`/../*.orig.tar.gz `pwd`/../$DISTRO/source

# create a source distribution for bionic
# pbuilder-dist bionic create
# pbuilder-dist bionic update
# it will be builded in "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION"
# change key (debuild -k) if you are not Robert Meolic
ALTDISTRO=bionic
echo "GENERATING SOURCE PACKAGE FOR $ALTDISTRO"
cp "../../changelog.deb" "debian/changelog"
dch -M -l"~$ALTDISTRO" -D $ALTDISTRO
debuild --no-lintian -S -sa -kF7FCCB3CD22F409B
mkdir `pwd`/../$ALTDISTRO
mkdir `pwd`/../$ALTDISTRO/source
mv `pwd`/../*.changes `pwd`/../*.dsc `pwd`/../$ALTDISTRO/source
mv `pwd`/../*.debian.tar.xz `pwd`/../$ALTDISTRO/source
mv `pwd`/../*.build `pwd`/../$ALTDISTRO/source
mv `pwd`/../*.buildinfo `pwd`/../$ALTDISTRO/source
cp `pwd`/../*.orig.tar.gz `pwd`/../$ALTDISTRO/source

# create a source distribution for hirsute
# pbuilder-dist hirsute create
# pbuilder-dist hirsute update
# it will be builded in "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION"
# change key (debuild -k) if you are not Robert Meolic
ALTDISTRO=hirsute
echo "GENERATING SOURCE PACKAGE FOR $ALTDISTRO"
cp "../../changelog.deb" "debian/changelog"
dch -M -l"~$ALTDISTRO" -D $ALTDISTRO
debuild --no-lintian -S -sa -kF7FCCB3CD22F409B
mkdir `pwd`/../$ALTDISTRO
mkdir `pwd`/../$ALTDISTRO/source
mv `pwd`/../*.changes `pwd`/../*.dsc `pwd`/../$ALTDISTRO/source
mv `pwd`/../*.debian.tar.xz `pwd`/../$ALTDISTRO/source
mv `pwd`/../*.build `pwd`/../$ALTDISTRO/source
mv `pwd`/../*.buildinfo `pwd`/../$ALTDISTRO/source
cp `pwd`/../*.orig.tar.gz `pwd`/../$ALTDISTRO/source

cd ..

echo ""
echo "************************"
echo "GENERATING DEB PACKAGES "
echo "************************"
echo ""

# all target pbuilder environments must already exists and be updated
# use e.g pbuilder-dist focal create
# use e.g pbuilder-dist focal update

echo "BUILDING FOR YOUR DISTRO: $DISTRO"
pbuilder-dist $DISTRO build --buildresult `pwd`/$DISTRO `pwd`/$DISTRO/source/*.dsc

ALTDISTRO=bionic
echo "BUILDING FOR $ALTDISTRO"
pbuilder-dist $ALTDISTRO build --buildresult `pwd`/$ALTDISTRO `pwd`/$ALTDISTRO/source/*.dsc

ALTDISTRO=hirsute
echo "BUILDING FOR $ALTDISTRO"
pbuilder-dist $ALTDISTRO build --buildresult `pwd`/$ALTDISTRO `pwd`/$ALTDISTRO/source/*.dsc

popd
rm -fr "distribution/version-$VERSION/release-$RELEASE/$NAME-$VERSION"

echo ""
echo "*******************"
echo "PACKAGES COMPLETED!"
echo "*******************"
echo ""
